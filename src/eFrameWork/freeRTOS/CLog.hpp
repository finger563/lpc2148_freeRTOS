#ifndef clog_included
#define clog_included



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// FILE NAME:     $Source:$
//                $Date:$
//                $Revision:$
//
// AUTHOR:        Jean-Sebastien Stoezel (js.stoezel@gmail.com)
//
// DESCRIPTION:   The CLog class is used to provide a lightweight logging capability.
//
// HISTORY:       $Log:$
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// INCLUDES
#include <stdint.h>
#include "CScifu.hpp"
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// MACROS

#if STATIC_LOG_VERBOSITY>4
#define LOG_TRACE       CScifu_Trace   
#else
#define LOG_TRACE
#endif

#if STATIC_LOG_VERBOSITY>3
#define LOG_DEBUG       CScifu_Debug
#else
#define LOG_DEBUG
#endif

#if STATIC_LOG_VERBOSITY>2
#define LOG_INFO        CScifu_Info
#else
#define LOG_INFO
#endif

#if STATIC_LOG_VERBOSITY>1
#define LOG_WARNING     CScifu_Warning
#else
#define LOG_WARNING
#endif

#if STATIC_LOG_VERBOSITY>0
#define LOG_ERROR       CScifu_Error
#else
#define LOG_ERROR
#endif

#define LOG             CScifu_Stdio







#define CLOG_OFF        0
#define CLOG_ERROR      1
#define CLOG_WARNING    2
#define CLOG_INFO       3
#define CLOG_DEBUG      4
#define CLOG_TRACE      5

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
class CLog
{
   /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
   /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
   // TYPES
   /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
   /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
   public:
   protected:
   private:



   /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
   /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
   // METHODS
   /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
   /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
   public:
   
   static void VerbositySet(
       const uint32_t  verbosity // in, verbosity level
       )
   {
       m_Verbosity = verbosity;
       switch(verbosity)
       {
          case CLOG_OFF:
          {
             CScifu::VerbositySet(SCIFU_OFF);
             break;
          }
          case CLOG_ERROR:
          {
             CScifu::VerbositySet(SCIFU_ERROR);
             break;
          }
          case CLOG_WARNING:
          {
             CScifu::VerbositySet(SCIFU_WARNING);
             break;
          }
          case CLOG_INFO:
          {
             CScifu::VerbositySet(SCIFU_INFO);
             break;
          }
          case CLOG_DEBUG:
          {
             CScifu::VerbositySet(SCIFU_DEBUG);
             break;
          }
          case CLOG_TRACE:
          {
             CScifu::VerbositySet(SCIFU_TRACE);
             break;
          }
          default:
          {}
       }
   }
   
   protected:
   private:



   /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
   /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
   // VARIABLES
   /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
   /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
   static uint32_t m_Verbosity;

}; // class CLog
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



#endif // clog_included
